setwd('D:/Study/7th sem/Machine Intelligence/Term Project/Scripts/updatedversionoftoolsfortermproject_6184_EntireData')
file.name = "weather_data_2006_2009.csv"
weather_data_2006_2009 = read.csv(paste(my.path, file.name, sep=''))
weather_data_2006_2009 = read.csv(paste(file.name, sep=''))
setwd("D:/Study/7th sem/Computing Lab/R Tutorial")
weather_data_2006_2009 = read.csv(paste(file.name, sep=''))
names(weather_data_2006_2009)
x = weather_data_2006_2009
y = x[x$Month == 2, ]
z = y[y$Temp..F. >= 10, ]
z.hist = hist(z$Temp..F., freq=FALSE)
length(z.hist$breaks) # Count the number of breaks
delta = z.hist$breaks[2]-z.hist$breaks[1]
sum(z.hist$density[1:7] * delta) # About 23%
z.hist$breaks[7+1]
delta = z.hist$breaks[2]-z.hist$breaks[1]
sum(z.hist$density[1:7] * delta) # About 23%
# Compute mean and standard deviation
m = mean(z$Temp..F.)
s = sd(z$Temp..F.)
# Plot histogram of temperature density and check if it follows normal distribution
plot(z.hist, freq=FALSE, xlab="T", ylab="Density")
# xlim and ylim used to denote the boundaries
plot(z.hist, freq=FALSE, xlim = c(25,60), ylim = c(0,0.1), xlab="T", ylab="Density")
par(new=TRUE) #  the next high-level plotting command (actually plot.new) should not clean the frame before drawing as if it were on a new device.
plot(function(x) dnorm(x, mean=m, sd=s), xlim = c(25,60), ylim = c(0,0.1))
zTemp = z$Temp..F.
z.2007 = z[z$Year == 2007,]
z.2008 = z[z$Year == 2008,]
# Quantile-quantile plot -
# The q-q plot is used to answer the following questions:
#  Do two data sets come from populations with a common distribution?
#  Do two data sets have common location and scale?
#  Do two data sets have similar distributional shapes?
#  Do two data sets have similar tail behavior?
qqplot(z.2007$Temp..F., z.2008$Temp..F.)
abline(0,1,col="red")
qqplot(z.2007$Temp..F., z.2007$RHum....)
abline(0,1,col="red")
lt40=pnorm(q=40, mean=m, sd=s) # probability of T < 40 in a normal distribution with mean m and sd s
lt45=pnorm(q=45, mean=m, sd=s) # probability of T < 45 in a normal distribution with mean m and sd s
lt40/lt45 # prob of T < 40 given that T < 45
qnorm(p=0.5, mean=m, sd=s)
weather.data.select = read.csv(paste(file.name, sep=''))
head(weather.data.select)
weather.data.select = weather.data.select[weather.data.select$Year == 2008,]
weather.data.select = weather.data.select[weather.data.select$Month == 8,]
summary(weather.data.select)
if(!require(outliers)) {
install.packages("outliers", dep=TRUE, repos=reposURL)
} else {
"Package outliers is already Installed."
} #load / install+load outliers
library(outliers)
if(!require(outliers)) {
install.packages("outliers", dep=TRUE, repos=reposURL)
} else {
"Package outliers is already Installed."
} #load / install+load outliers
install.packages("outliers", dep=TRUE)
library(outliers)
outlier(weather.data.select$Temp..F.)
outlier(weather.data.select$Temp..F., opposite = TRUE)
if(!require(extremevalues)) {
install.packages("extremevalues", dep=TRUE)
} else {
"Package extremevalues is already Installed."
} #load / install+load extremevalues
library(extremevalues)
grubbs.test(weather.data.select$Temp..F.)
grubbs.test(weather.data.select$Temp..F., opposite = TRUE)
grubbs.test(weather.data.select$Temp..F., opposite = TRUE, type=11)
plot(hist(weather.data.select$Temp..F., freq=FALSE, breaks=15), freq=FALSE, xlim = c(45,95), ylim = c(0,0.1), xlab="T", ylab="Density")
par(new=TRUE) #  the next high-level plotting command (actually plot.new) should not clean the frame before drawing as if it were on a new device.
plot(function(x) dnorm(x, mean=mean(weather.data.select$Temp..F.), sd=sd(weather.data.select$Temp..F.)), xlim = c(45,95), ylim = c(0,0.1))
ol <- getOutliers(weather.data.select$Temp..F.)
ol
summary(ol)
outlierPlot(weather.data.select$Temp..F., ol)
weather.data.na = weather.data.select
n = nrow(weather.data.na)
weather.data.na$RHum....[sample(which(weather.data.na$Temp..F. > 70), n/100)] = NA
sum(is.na(weather.data.na$RHum....))/length(weather.data.na$RHum....)
n
hist(which(is.na(weather.data.na$RHum....)))
temp_with_hum_observed = weather.data.na$Temp..F.[!is.na(weather.data.na$RHum....)]
temp_with_hum_missing = weather.data.na$Temp..F.[is.na(weather.data.na$RHum....)]
qqplot(temp_with_hum_missing, temp_with_hum_observed)
abline(0,1, col="red")
qqplot(temp_with_hum_missing, temp_with_hum_observed[temp_with_hum_observed > 70])
abline(0,1, col="red")
qqplot(temp_with_hum_missing, temp_with_hum_observed, ylim=c(50,90))
abline(0,1, col="red")
ind <- sapply(weather.data.na$RHum...., function(x) if(is.na(x)){1}else{0})
runs <- rle(ind) # run length encoding
runs
run.df <- data.frame(runs$lengths, runs$values)
run.df = run.df[with(run.df, order(-runs.values, -runs.lengths)),]
run.df[1:10,]
hist(weather.data.select$RHum....)
if(!require(Amelia)) {
install.packages("Amelia", dep=TRUE)
} else {
"Package Amelia is already Installed."
} #load / install+load extremevalues
library(Amelia)
weather.data.na = weather.data.na[,-which(names(weather.data.na)=="Pres.mbar.")]
weather.data.na = weather.data.na[,-which(names(weather.data.na)=="Pres.mbar.")]
amelia.results = amelia(weather.data.na, idvars=c("Year", "Month", "Day", "Time"))
amelia.results$imputations[[1]]
amelia.results$imputations[[3]]
amelia.results$imputations$imp3
weather.data.na = weather.data.na[,-which(names(weather.data.na)=="Pres.mbar.")]
amelia.results = amelia(weather.data.na, idvars=c("Year", "Month", "Day", "Time"))
plot(amelia.results)
amelia.results$imputations$imp3
amelia.results$imputations[[1]]
amelia.results$imputations[[3]]
amelia.results = amelia(weather.data.na, idvars=c("Year", "Month", "Day", "Time"))
summary(weather.data.na)
weather.data.na = weather.data.na[,-which(names(weather.data.na)=="Pres.mbar.")]
summary(weather.data.na)
weather.data.na = weather.data.select
n = nrow(weather.data.na)
# Select 1% of data where temperature is greater than 70F and replace its humidity with NA
weather.data.na$RHum....[sample(which(weather.data.na$Temp..F. > 70), n/100)] = NA
# find percent missing
sum(is.na(weather.data.na$RHum....))/length(weather.data.na$RHum....)
# Exercise: Explain the following histogram.
weather.data.na = weather.data.na[,-which(names(weather.data.na)=="Pres.mbar.")]
amelia.results = amelia(weather.data.na, idvars=c("Year", "Month", "Day", "Time"))
amelia.results$imputations[[1]]
amelia.results$imputations[[3]]
amelia.results$imputations$imp3
plot(amelia.results)
plot(weather.data.na$Temp..F. ~ weather.data.na$RHum....)
mean(weather.data.na$RHum....)
mean(weather.data.na$RHum...., na.rm=TRUE)
for(i in 1:5) {
print(mean(amelia.results$imputations[[i]]$RHum....))
}
plot(amelia.results)
hist(weather.data.na$RHum...., xlim=c(0,100))
hist(amelia.results$imputations[[4]]$RHum...., xlim=c(0,100))
qqplot(weather.data.select$RHum...., amelia.results$imputations[[1]]$RHum....)
abline(0,1,col="red")
